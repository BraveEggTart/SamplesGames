import{_ as a,c as e,o as t,Y as r}from"./chunks/framework.BTdFKloG.js";const f=JSON.parse('{"title":"动态根据配置生成按钮","description":"","frontmatter":{"title":"动态根据配置生成按钮","descript":"根据点击对象自动获取配置项，生成对应按钮。","date":"2024-04-30T00:00:00.000Z","image":"https://unity.just4dream.club/D015.jpg","index":15,"tags":["⭐️⭐️"],"categories":["射线检测","ScriptableObject"]},"headers":[],"relativePath":"posts/D015.md","filePath":"posts/D015.md","lastUpdated":1719732937000}'),i={name:"posts/D015.md"},o=r('<nav class="table-of-contents"><ul><li><a href="#讲解视频链接">讲解视频链接</a></li><li><a href="#如何运行">如何运行</a></li><li><a href="#代码思路">代码思路</a></li><li><a href="#类图设计">类图设计</a></li></ul></nav><h2 id="讲解视频链接" tabindex="-1">讲解视频链接 <a class="header-anchor" href="#讲解视频链接" aria-label="Permalink to &quot;讲解视频链接&quot;">​</a></h2><p>无</p><h2 id="如何运行" tabindex="-1">如何运行 <a class="header-anchor" href="#如何运行" aria-label="Permalink to &quot;如何运行&quot;">​</a></h2><p>打开示例场景，按照提示使用即可。</p><h2 id="代码思路" tabindex="-1">代码思路 <a class="header-anchor" href="#代码思路" aria-label="Permalink to &quot;代码思路&quot;">​</a></h2><p>每个单独的对象有一个技能列表，这个技能列表在Editor配置，每个技能则是存储成了ScriptableObject</p><p>主逻辑：射线点击，检测Cube被点击则读取Cube对应的技能列表，拿到对应SO的信息，然后根据Prefab生成相应数量的按钮。</p><h2 id="类图设计" tabindex="-1">类图设计 <a class="header-anchor" href="#类图设计" aria-label="Permalink to &quot;类图设计&quot;">​</a></h2><p>无</p>',10),s=[o];function l(c,n,d,h,p,_){return t(),e("div",null,s)}const b=a(i,[["render",l]]);export{f as __pageData,b as default};
