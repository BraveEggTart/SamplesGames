import{_ as a,c as e,o as l,Y as i}from"./chunks/framework.BTdFKloG.js";const f=JSON.parse('{"title":"注册登录功能实现","description":"","frontmatter":{"title":"注册登录功能实现","descript":"一个简单的注册登录界面的实现，使用了正则来做判定。","date":"2024-04-30T00:00:00.000Z","image":"https://unity.just4dream.club/D012.jpg","index":12,"tags":["⭐️⭐️⭐️"],"categories":["UGUI-初级","正则表达式"]},"headers":[],"relativePath":"posts/D012.md","filePath":"posts/D012.md","lastUpdated":1719732937000}'),t={name:"posts/D012.md"},o=i('<nav class="table-of-contents"><ul><li><a href="#讲解视频链接">讲解视频链接</a></li><li><a href="#如何运行">如何运行</a></li><li><a href="#代码思路">代码思路</a></li><li><a href="#类图设计">类图设计</a></li></ul></nav><h2 id="讲解视频链接" tabindex="-1">讲解视频链接 <a class="header-anchor" href="#讲解视频链接" aria-label="Permalink to &quot;讲解视频链接&quot;">​</a></h2><p>无</p><h2 id="如何运行" tabindex="-1">如何运行 <a class="header-anchor" href="#如何运行" aria-label="Permalink to &quot;如何运行&quot;">​</a></h2><p>打开示例场景，如界面所示，可以注册账号，登录账号，同时限定账号名只能使用英文或者数字。</p><h2 id="代码思路" tabindex="-1">代码思路 <a class="header-anchor" href="#代码思路" aria-label="Permalink to &quot;代码思路&quot;">​</a></h2><p>这个功能主要使用了UGUI来拼接界面，正则表达式来限定账号名只能使用英文数字..</p><p>三个脚本：</p><ul><li><p>LoginSystem：<strong>单例，存放注册数据(使用字典)</strong>，方便登录模块调用。作为登录与注册的桥梁。</p></li><li><p>Login：用于登录模块的逻辑编写</p><ul><li>判定逻辑： <ul><li>该用户不存在（查找字典有无该Key）</li><li>密码输入错误（查找对应Key值）</li><li>账号密码不能为空（输入框空判断）</li></ul></li></ul></li><li><p>Register：用于注册模块的逻辑编写</p><ul><li>判定逻辑： <ul><li>账号密码不能为空（输入框空判断）</li><li>账号用户名不能重复（查找字典有无该key）</li><li>账号只能使用英文和数字（正则：<strong><code>@&quot;^[a-zA-Z0-9]+$”</code></strong>）</li><li>账号长度不能低于4位</li><li>密码长度不能低于6位</li><li>两次密码不一致</li></ul></li></ul></li></ul><h2 id="类图设计" tabindex="-1">类图设计 <a class="header-anchor" href="#类图设计" aria-label="Permalink to &quot;类图设计&quot;">​</a></h2><p>无</p>',11),r=[o];function s(n,c,p,d,h,u){return l(),e("div",null,r)}const m=a(t,[["render",s]]);export{f as __pageData,m as default};
