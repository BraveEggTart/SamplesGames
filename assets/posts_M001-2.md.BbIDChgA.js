import{_ as e,c as t,o as i,Y as a,a as l}from"./chunks/framework.BTdFKloG.js";const b=JSON.parse('{"title":"对话系统-2","description":"","frontmatter":{"title":"对话系统-2","descript":"对话系统稍微复杂一点点的实现方式，通过读取CSV配置表来组织对话，支持分支。","date":"2024-04-30T00:00:00.000Z","image":"https://unity.just4dream.club/M001_2.jpg","index":26,"tags":["⭐️⭐️⭐️⭐️"],"categories":["CSV读存"]},"headers":[],"relativePath":"posts/M001-2.md","filePath":"posts/M001-2.md","lastUpdated":1719732937000}'),o={name:"posts/M001-2.md"},s=a('<nav class="table-of-contents"><ul><li><a href="#讲解视频链接">讲解视频链接</a></li><li><a href="#如何运行">如何运行</a></li><li><a href="#代码思路">代码思路</a></li><li><a href="#类图设计">类图设计</a></li></ul></nav><h2 id="讲解视频链接" tabindex="-1">讲解视频链接 <a class="header-anchor" href="#讲解视频链接" aria-label="Permalink to &quot;讲解视频链接&quot;">​</a></h2>',2),r=l("iframe",{src:"//player.bilibili.com/player.html?isOutside=true&aid=469528810&bvid=BV1v5411D79x&cid=733020512&p=1&high_quality=1&danmaku=1&as_wide=1",allowfullscreen:"allowfullscreen",width:"100%",height:"600",scrolling:"no",frameborder:"0",sandbox:"allow-top-navigation allow-same-origin allow-forms allow-scripts"},null,-1),n=a('<h2 id="如何运行" tabindex="-1">如何运行 <a class="header-anchor" href="#如何运行" aria-label="Permalink to &quot;如何运行&quot;">​</a></h2><p>运行实例场景，点击即可对话，有GameManager、DialogueManager两个脚本。</p><p>对话数据存在M001-2/Config文件夹中。</p><p>GameManager对象上挂载了GameManager脚本，其中有一个参数用于控制从想要触发的ID编号。</p><h2 id="代码思路" tabindex="-1">代码思路 <a class="header-anchor" href="#代码思路" aria-label="Permalink to &quot;代码思路&quot;">​</a></h2><p>对话数据存放于<strong>CSV文件</strong>，CSV类似于Excel表格，是可以被Excel打开读取和相互转换的，同时CSV本身是文本文件，这就意味着可以通过一行行读取。(下图就是对话结构数据)</p><p><img src="https://prod-files-secure.s3.us-west-2.amazonaws.com/c3059dad-22d2-42f5-9dcb-56863fb7e00e/3187f4d0-048a-4687-b612-5fe26cab93ee/Untitled.png" alt="Untitled"></p><p>类型：对话类型、选项类型、结束标志</p><p>通过这种结构的数据基本可以实现，简单对话、对话跳转、多人物对话、对话选项、对话结束效果等功能，所有数据就可以通过表格添加，然后程序读取。</p><aside> 💡 具体的实现思路 </aside><ul><li>**读取数据：**CSV本质还是文本文件，以及可以通过TextAsset来获取，然后通过<code>text.Split(&#39;\\n&#39;)</code>拆分成行。</li><li>**解析数据：**注意上图的表格，每行作为一条对话数据，而每条对话数据的各项数据则通过逗号分割，所以，再次通过<code>dialogContentRows[i].Split(&#39;,&#39;)</code>来分割每条数据项。</li><li>**显示数据：**现在我们有了行数据、以及解析后的细分数据项，那么下面就是根据时机显示到对应UI上去即可，然后再根据跳转的ID，跳转到下一条对话数据。</li><li>**生成选项：**我们的对话数据不只有DiaLog类型、还有Choose类型，也就选择对话分支的功能，当对话跳转到选项分支时，就需要根据对应的选项来生成对应按钮，然后给按钮绑定ID，监听按钮点击事件，再跳转对应编号的对话。</li><li>**结束对话：**当跳转到类型为End的对话时，这就代表这一条对话分支线到这里就结束了。</li></ul><h2 id="类图设计" tabindex="-1">类图设计 <a class="header-anchor" href="#类图设计" aria-label="Permalink to &quot;类图设计&quot;">​</a></h2><p>无</p>',13),d=[s,r,n];function c(_,p,h,u,f,m){return i(),t("div",null,d)}const S=e(o,[["render",c]]);export{b as __pageData,S as default};
